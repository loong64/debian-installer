MEDIUM_SUPPORTED = cdrom device-tree

DEBIAN_RELEASE = unstable

KEYRING = /usr/share/keyrings/debian-ports-archive-keyring.gpg

USE_UNRELEASED = 1

KERNELMAJOR = 2.6
# The version of the kernel to use.
KERNELVERSION = $(LINUX_KERNEL_ABI)-loong64
KERNELNAME = vmlinuz

# Configuration for generating EFI images
GRUB_EFI=y
GRUB_EFI_PLATFORM=loongarch64-efi
GRUB_EFI_NAME=loongarch64
# We do *NOT* have support for UEFI Secure Boot on this arch
EFI_SIGNED=n

# We build a gtk installer for this arch
GRAPHICAL_INSTALLER=y

arch_boot_screens:
arch_tree:

# The font to load in GRUB
GRUB_FONT = /usr/share/grub/ascii.pf2

# Extract GRUB EFI files.
.PHONY: loong64_grub_efi
loong64_grub_efi: $(TEMP_DTBS)
ifeq ($(GRUB_EFI),y)
	efi-image -o $(TEMP_GRUB_EFI) -g $(GRUB_EFI_PLATFORM) \
		-e $(GRUB_EFI_NAME) -n $(NETBOOT_PATH) \
		-s $(EFI_SIGNED) -d $(TEMP_DTBS)
endif

# Supply GRUB EFI configuration.
.PHONY: arch_cd_info_dir
arch_cd_info_dir: loong64_grub_efi
	-rm -f $(TEMP_CD_INFO_DIR)/*
	mkdir -p $(TEMP_CD_INFO_DIR)

	if [ "$(GRUB_EFI)" = y ]; then \
		set -e; \
		mkdir -p $(TEMP_CD_INFO_DIR)/grub/$(GRUB_EFI_PLATFORM); \
		cp -a $(TEMP_GRUB_EFI)/efi.img $(TEMP_CD_INFO_DIR)/grub/; \
		if [ "$(GRAPHICAL_INSTALLER)" = y ]; then \
			grub-gencfg \
				KERNEL /%install%/vmlinuz \
				INITRD /%install%/initrd.gz \
				INITRD_GTK /%install%/gtk/initrd.gz \
				HEADER boot/$(ARCH)/grub/grub-efi.cfg \
				IS_PURE_GTK "$(IS_PURE_GTK)" \
			> $(TEMP_CD_INFO_DIR)/grub/grub.cfg; \
		else \
			grub-gencfg \
				KERNEL /%install%/vmlinuz \
				INITRD /%install%/initrd.gz \
				HEADER boot/$(ARCH)/grub/grub-efi.cfg \
				IS_PURE_GTK "$(IS_PURE_GTK)" \
			> $(TEMP_CD_INFO_DIR)/grub/grub.cfg; \
		fi; \
		cp -a $(GRUB_FONT) $(TEMP_CD_INFO_DIR)/grub/font.pf2; \
		cp -a $(TEMP_GRUB_EFI)/boot/grub/$(GRUB_EFI_PLATFORM)/* \
			$(TEMP_CD_INFO_DIR)/grub/$(GRUB_EFI_PLATFORM)/; \
	fi
